================================= Sirius WEEK 3 AGENDA

    Goals...

        - Conditionals
        - Unit Testing and practice assessment
        - First JavaScript Assessment

    Tentative Schedule...

        Monday - Wrap up Functions, begin Conditionals
        Tuesday - Begin Unit Testing and try out practice assessment
        Wednesday - Intro to Placement / First JS Assessment (tentatively)
        Thursday - First JS Assessment (tentatively), Loops
        Friday - Loops


================================= 11/30/21

     This morning...

     - Wrap up Conditionals
     - Begin Unit Testing with JS

     This afternoon...

     - More Unit Testing!
     - Practice JS Assessment

================================= 11/29/21

     This morning...

     - Wrap up Functions
     - Begin Conditionals lesson

     This afternoon...

     - More conditionals material and exercises
     - Tentative conditionals walkthrough



================================= Sirius WEEK 2 AGENDA

    Goals...

        - More git practice!
        - Learn and practice JS types fundamentals
        - Become familiar with JavaScript functions

    Tentative Schedule...
        Monday - Git practice and Intro to JS
        Tuesday - More JS Intro & Functions
        Wed-Fri - Thanksgiving Holidays!

================================= 11/23/21

    This morning...

    - Finish up Intro JS (Booleans, etc)
    - Begin Functions lesson

    This afternoon...

    - Functions exercises!

    Housekeeping...

    - Make sure your name is consistently "First Last" across platforms

================================= 11/22/21

    This morning...

    - Practice git and clone down sirius-web-exercises
    - Practice and go in-depth on Intro to JS concepts

    This afternoon...

    - Continuing with JS Intro!

    Housekeeping...

    - Be sure to get your Slack profile updated:
        -> Full name
        -> Photo (just take a good selfie for now!)



================================= Sirius WEEK 1 AGENDA

  Goals...

    - settle in to the day-to-day of Codeup
    - set up GitHub/Instructor Tools Accounts
    - become familiar with Mac, Terminal, and Git basics
    - become familiar with IntelliJ
    - JavaScript fun!

  Tentative Schedule...

      Thursday - Welcome Day / Set Up
      Friday - Setup / Intro to Mac, Terminal, Git / Intro to JavaScript


================================= 11/19/21

    This morning...

    - Run/Troubleshoot Set-Up Scripts
        - Split into M1 & Intel groups
        - Run Scripts
        - Regroup, break (staff formulate a plan)
        - Tackle the challenge

    - async While Tackling the Challenge
        - Developing and Embracing a Growth Mindset
            - See also, Carol Dweck
        - Mac / Terminal / Git / Intellij Exercises

    - Clone Down sirius-web-exercises
        -Read through the syllabus

    - create repo 'codeup-web-exercises'



    This afternoon...

    - Reminder that we are swapping up HTML/CSS with JavaScript I
    - You will have front-loaded assessments, no worries and we will guide you through it all!

    - Javascript With HTML, perhaps Introduction to JavaScript

    Tomorrow...

    - Introduction to Javascript


================================= 11/18/21

        
    This afternoon...

    - Set up GitHub accounts
    - Get Curriculum Access / Register in Instructor Tools
        -> tools.codeup.com/register
    - Begin Set Up Scripts and Configuration
    - Clone down oberon-web-exercises (tentatively)

    Announcements...

    - GET SOME SLEEP! We have a big week ahead!

    Read ahead in the curriculum
    - Intro to JavaScript
    - Javascript with HTML









================================= PEER INTERVIEW (20 minutes)

Group up with your neighbor and take turns interviewing each other with the following questions:

What draws you to coding and web development as a career?

What are your greatest strengths? Weaknesses?

How has your background helped prepare you for web development (technical and non-technical)?

Describe your dream job in web development.

What technologies interest you, web development/coding-related, and otherwise?

What online resources do you use to to get the latest info/news on technology?




================================= PRO-TIPS

"Be excellent to each other. Party on, dudes!"

Conduct yourself with professionalism (consider that THIS IS YOUR JOB).

What is professional behavior? It means even on difficult days, doing the following:
  - communicate effectively
  - allow others to "save face", especially in conflict
  - escalate issues upward
  - follow through with commitments
  - knowing your limits (when to take a break, when to disengage, when to escalate)

Be heard (don't fail silently).

Have a growth mindset

Pro Tips: 

- Always be eager to fail and make mistakes
- Study outside of class
- Read ahead in the curriculum
- Wash your dishes
- Attend meetups
- Help each other and form study groups
- Don't treat lectures like YouTube (be engaged)



================================= EXPECTATIONS (Leveling Up)

No. 1 learning objective:

  "Working with others effectively to find and solve problems in the face of uncertainty."


How to Best Use Your Resources:

  First, do these things...

  1. reread instructions and curriculum (if applicable)
  2. work through a problem solving process for at least 10-15 minutes
  3. Google errors / read forums / check documentation to acquire better context
  4. check with other students

  How to ask for help...

  1. describe your current objective
  2. describe the output you are currently getting
  3. explain what you have already tried
  4. describe what you think the problem/solution might be



================================= TERMINAL

-- Intro --

Everything in your file system is either a file or a folder/directory (a container for files)

The Mac file system is organized in a tree-like structure:


                        Home directory navigate to this level using cd ~
                        (caseyedwards)

                        |           |
                        |           |

               Applications/       Desktop/   Etc...

            |               |          |
            |               |          |

    Calculator.app       Calendar/     somefile.txt



Absolute vs. Relative file paths


From the desktop directory to get to oberon-web-exercises...

Absolute: cd ~/IdeaProjects/oberon-web-exercises

Relative: 
  cd ..
  cd IdeaProjects
  cd oberon-web-exercises

  OR

  cd ../IdeaProjects/oberon-web-exercises


================================= CREATING CODEUP-WEB-EXERCISES REPO

On GitHub, do the following...

   1) click on the plus dropdown next to your profile
   2) click "new repository"
   3) name the repository "codeup-web-exercises"
   4) add a description like "For class exercises"
   5) click "create repository" button (do not change any other inputs)
   6) on the page for an empty repository, click the first clipboard (ssh version)

In IntelliJ, do the following...

   7) from starting IntelliJ options, select "checkout from version control" dropdown
   8) choose Git
   9) paste in the GitHub repo url you copied previously
  10) click the "clone" button
  11) click "yes" on the next pop-up
  12) keep clicking "yes" for each menu window then the final "finish" button
  13) a new IntelliJ project should automatically open for codeup-web-exercises
  14) green cup!











================================= GIT / GITHUB (Resources in Appendix)

What is Git?
    
What is a Version Control System?

What are two distinctly different ways we can interact with Git in IntelliJ and the advantages of each??

What is GitHub?

What are the benefits of GitHub?

Git Work Flow: status, staging, committing, pushing










What is Git?
  VCS version control system
    
What is a Version Control System?

  save different versions
  alternate timelines
  time machine


  first-draft.txt
  first-draft1.txt
  first-draft1a.txt
  ...



What are two distinctly different ways we can interact with Git in IntelliJ and the advantages of each??

  Terminal
  GUI

What is GitHub?

What are the benefits of GitHub?

Git Work Flow

  status, staging, committing, pushing


1. Add a file
2. add to "staging area"
3. save "commit"
4. push to GitHub (saving in the cloud)





Make sure global configuration is correct (name and email)
  git config --get user.name
  git config --get user.email
Set the global configuration if needed
  git config --global user.name "John Doe"
  git config --global user.email johndoe@example.com


================================= FREE DEVELOPMENT RESOURCES

Google - the best resource
w3schools.com - very helpful quick reference
Mozilla Developer Network (MDN) - deeper technical reference than w3schools
StackOverflow - forum for programming questions
Codecademy - many tutorials with exercises to debug
Lynda - free learning resource through Bibliotech Bexar County
Treehouse.com - free learning resource through Bibliotech Bexar County
freeCodeCamp - entire curriculum of exercises and resources

















